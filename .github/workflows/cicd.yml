# File: .github/workflows/cicd.yml
# Description: CI/CD Workflow for Container Image Build and Vulnerability Scanning
# Author: Example Author
# Date: 2024-12-10

name: CI/CD with Vulnerability Scanning

on:
  push:
    branches:
      - main
  pull_request:

env:
  # ACR Configuration
  ACR_LOGIN_SERVER: tiuvulbasecr.azurecr.io
  ACR_REPOSITORY: sample-app
  PLATFORM: linux/amd64

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Log in to Azure Container Registry (ACR)
      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # Step 3: Build Docker Image
      - name: Build Docker Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ github.sha }} .
          docker tag ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ github.sha }} ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:latest

      # Step 4: Push Docker Image to ACR
      - name: Push Docker Image to ACR
        run: |
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ github.sha }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:latest

      # Step 5: Run Trivy Vulnerability Scanner
      - name: Run Trivy Vulnerability Scanner
        run: |
          trivy image --severity CRITICAL,HIGH \
            --ignore-unfixed \
            --format table \
            --exit-code 1 \
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ github.sha }}

      # Step 6: Slack Notification on Failure
      - name: Notify Slack on Vulnerabilities
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: "Vulnerability detected in ${{ env.ACR_REPOSITORY }}"
          fields: repo, commit, author, workflow, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      # Step 7: Slack Notification on Success
      - name: Notify Slack on Success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: "No vulnerabilities detected in ${{ env.ACR_REPOSITORY }}"
          fields: repo, commit, author, workflow, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
