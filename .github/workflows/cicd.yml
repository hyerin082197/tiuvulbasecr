name: CI/CD with Vulnerability Scanning

on:
  push:
    branches:
      - main
  pull_request:

permissions:
  contents: write
  actions: write

env:
  ACR_LOGIN_SERVER: tiuvulbasecr.azurecr.io
  ACR_REPOSITORY: sample-app
  PLATFORM: linux/amd64

jobs:
  build-and-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Docker
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh

      - name: Log in to Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ github.sha }} -f ./Dockerfile .
          docker tag ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ github.sha }} ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:latest

      - name: Push Docker Image to ACR
        run: |
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ github.sha }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:latest

      - name: Run Trivy Vulnerability Scanner
        run: |
          trivy image --severity CRITICAL,HIGH \
            --ignore-unfixed \
            --format table \
            --exit-code 1 \
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.ACR_REPOSITORY }}:${{ github.sha }}

      - name: Notify Slack on Vulnerabilities
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: "Vulnerability detected in ${{ env.ACR_REPOSITORY }}"
          fields: repo, commit, author, workflow, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on Success
        if: success()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          author_name: "No vulnerabilities detected in ${{ env.ACR_REPOSITORY }}"
          fields: repo, commit, author, workflow, job, took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
